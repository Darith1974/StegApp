//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DavidFlynnDatabaseModel", "FK_Log_UserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication4.DataAccess.DataModel.User), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication4.DataAccess.DataModel.Log), true)]
[assembly: EdmRelationshipAttribute("DavidFlynnDatabaseModel", "FK_Log_Log", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication4.DataAccess.DataModel.Log), "Log1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WindowsFormsApplication4.DataAccess.DataModel.Log), true)]
[assembly: EdmRelationshipAttribute("DavidFlynnDatabaseModel", "FK_Log_EndUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication4.DataAccess.DataModel.User), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication4.DataAccess.DataModel.Log), true)]
[assembly: EdmRelationshipAttribute("DavidFlynnDatabaseModel", "FK_Log_PictureId", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WindowsFormsApplication4.DataAccess.DataModel.Picture), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication4.DataAccess.DataModel.Log), true)]
[assembly: EdmRelationshipAttribute("DavidFlynnDatabaseModel", "FK_PictureType_Picture", "PictureType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WindowsFormsApplication4.DataAccess.DataModel.PictureType), "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsFormsApplication4.DataAccess.DataModel.Picture), true)]

#endregion

namespace WindowsFormsApplication4.DataAccess.DataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PictureType> PictureTypes
        {
            get
            {
                if ((_PictureTypes == null))
                {
                    _PictureTypes = base.CreateObjectSet<PictureType>("PictureTypes");
                }
                return _PictureTypes;
            }
        }
        private ObjectSet<PictureType> _PictureTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PictureTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictureTypes(PictureType pictureType)
        {
            base.AddObject("PictureTypes", pictureType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DavidFlynnDatabaseModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="sentDatetime">Initial value of the SentDatetime property.</param>
        /// <param name="messageKey">Initial value of the MessageKey property.</param>
        /// <param name="endUserID">Initial value of the EndUserID property.</param>
        public static Log CreateLog(global::System.Int32 logId, global::System.Int32 userId, global::System.DateTime sentDatetime, global::System.String messageKey, global::System.Int32 endUserID)
        {
            Log log = new Log();
            log.LogId = logId;
            log.UserId = userId;
            log.SentDatetime = sentDatetime;
            log.MessageKey = messageKey;
            log.EndUserID = endUserID;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Int32 _LogId;
        partial void OnLogIdChanging(global::System.Int32 value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentDatetime
        {
            get
            {
                return _SentDatetime;
            }
            set
            {
                OnSentDatetimeChanging(value);
                ReportPropertyChanging("SentDatetime");
                _SentDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentDatetime");
                OnSentDatetimeChanged();
            }
        }
        private global::System.DateTime _SentDatetime;
        partial void OnSentDatetimeChanging(global::System.DateTime value);
        partial void OnSentDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageKey
        {
            get
            {
                return _MessageKey;
            }
            set
            {
                OnMessageKeyChanging(value);
                ReportPropertyChanging("MessageKey");
                _MessageKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageKey");
                OnMessageKeyChanged();
            }
        }
        private global::System.String _MessageKey;
        partial void OnMessageKeyChanging(global::System.String value);
        partial void OnMessageKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PictureId;
        partial void OnPictureIdChanging(Nullable<global::System.Int32> value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EndUserID
        {
            get
            {
                return _EndUserID;
            }
            set
            {
                OnEndUserIDChanging(value);
                ReportPropertyChanging("EndUserID");
                _EndUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndUserID");
                OnEndUserIDChanged();
            }
        }
        private global::System.Int32 _EndUserID;
        partial void OnEndUserIDChanging(global::System.Int32 value);
        partial void OnEndUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_UserId", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_UserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_UserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_UserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_UserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_Log", "Log1")]
        public Log Log1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> Log1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_Log", "Log")]
        public Log Log2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> Log2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("DavidFlynnDatabaseModel.FK_Log_Log", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_EndUserId", "User")]
        public User User_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_PictureId", "Picture")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Picture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Picture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DavidFlynnDatabaseModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="pictureTypeID">Initial value of the PictureTypeID property.</param>
        /// <param name="pictureName">Initial value of the PictureName property.</param>
        /// <param name="pictureData">Initial value of the PictureData property.</param>
        /// <param name="pictureStatus">Initial value of the PictureStatus property.</param>
        public static Picture CreatePicture(global::System.Int32 pictureId, global::System.Int32 pictureTypeID, global::System.String pictureName, global::System.Byte[] pictureData, global::System.Boolean pictureStatus)
        {
            Picture picture = new Picture();
            picture.PictureId = pictureId;
            picture.PictureTypeID = pictureTypeID;
            picture.PictureName = pictureName;
            picture.PictureData = pictureData;
            picture.PictureStatus = pictureStatus;
            return picture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                if (_PictureId != value)
                {
                    OnPictureIdChanging(value);
                    ReportPropertyChanging("PictureId");
                    _PictureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PictureId");
                    OnPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureTypeID
        {
            get
            {
                return _PictureTypeID;
            }
            set
            {
                OnPictureTypeIDChanging(value);
                ReportPropertyChanging("PictureTypeID");
                _PictureTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureTypeID");
                OnPictureTypeIDChanged();
            }
        }
        private global::System.Int32 _PictureTypeID;
        partial void OnPictureTypeIDChanging(global::System.Int32 value);
        partial void OnPictureTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PictureName
        {
            get
            {
                return _PictureName;
            }
            set
            {
                OnPictureNameChanging(value);
                ReportPropertyChanging("PictureName");
                _PictureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PictureName");
                OnPictureNameChanged();
            }
        }
        private global::System.String _PictureName;
        partial void OnPictureNameChanging(global::System.String value);
        partial void OnPictureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PictureData
        {
            get
            {
                return StructuralObject.GetValidValue(_PictureData);
            }
            set
            {
                OnPictureDataChanging(value);
                ReportPropertyChanging("PictureData");
                _PictureData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PictureData");
                OnPictureDataChanged();
            }
        }
        private global::System.Byte[] _PictureData;
        partial void OnPictureDataChanging(global::System.Byte[] value);
        partial void OnPictureDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PictureStatus
        {
            get
            {
                return _PictureStatus;
            }
            set
            {
                OnPictureStatusChanging(value);
                ReportPropertyChanging("PictureStatus");
                _PictureStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureStatus");
                OnPictureStatusChanged();
            }
        }
        private global::System.Boolean _PictureStatus;
        partial void OnPictureStatusChanging(global::System.Boolean value);
        partial void OnPictureStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_PictureId", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_PictureId", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_PictureType_Picture", "PictureType")]
        public PictureType PictureType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureType>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "PictureType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureType>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "PictureType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PictureType> PictureTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PictureType>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "PictureType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PictureType>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "PictureType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DavidFlynnDatabaseModel", Name="PictureType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PictureType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PictureType object.
        /// </summary>
        /// <param name="pictureTypeId">Initial value of the PictureTypeId property.</param>
        /// <param name="typeDescription">Initial value of the TypeDescription property.</param>
        public static PictureType CreatePictureType(global::System.Int32 pictureTypeId, global::System.String typeDescription)
        {
            PictureType pictureType = new PictureType();
            pictureType.PictureTypeId = pictureTypeId;
            pictureType.TypeDescription = typeDescription;
            return pictureType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureTypeId
        {
            get
            {
                return _PictureTypeId;
            }
            set
            {
                if (_PictureTypeId != value)
                {
                    OnPictureTypeIdChanging(value);
                    ReportPropertyChanging("PictureTypeId");
                    _PictureTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PictureTypeId");
                    OnPictureTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureTypeId;
        partial void OnPictureTypeIdChanging(global::System.Int32 value);
        partial void OnPictureTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeDescription
        {
            get
            {
                return _TypeDescription;
            }
            set
            {
                OnTypeDescriptionChanging(value);
                ReportPropertyChanging("TypeDescription");
                _TypeDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeDescription");
                OnTypeDescriptionChanged();
            }
        }
        private global::System.String _TypeDescription;
        partial void OnTypeDescriptionChanging(global::System.String value);
        partial void OnTypeDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_PictureType_Picture", "Picture")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("DavidFlynnDatabaseModel.FK_PictureType_Picture", "Picture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DavidFlynnDatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="lastname">Initial value of the Lastname property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String password, global::System.String firstname, global::System.String lastname)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.Password = password;
            user.Firstname = firstname;
            user.Lastname = lastname;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_UserId", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_UserId", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_UserId", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DavidFlynnDatabaseModel", "FK_Log_EndUserId", "Log")]
        public EntityCollection<Log> Logs_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("DavidFlynnDatabaseModel.FK_Log_EndUserId", "Log", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
